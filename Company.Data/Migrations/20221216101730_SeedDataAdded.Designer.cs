// <auto-generated />
using System;
using Company.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company.Data.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20221216101730_SeedDataAdded")]
    partial class SeedDataAdded
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Company.Data.Entities.Business", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("OrganisationsNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("Businesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyName = "Min första Sverige AB",
                            OrganisationsNumber = "1-234567890"
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Personnel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Salary")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("UnionMember")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Personnel");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Anders",
                            Salary = 20000.0,
                            SectionId = 1,
                            Surname = "Svensson",
                            UnionMember = true
                        },
                        new
                        {
                            Id = 2,
                            Name = "Anna",
                            Salary = 25000.0,
                            SectionId = 2,
                            Surname = "Svensdotter",
                            UnionMember = true
                        },
                        new
                        {
                            Id = 3,
                            Name = "Lars",
                            Salary = 25000.0,
                            SectionId = 2,
                            Surname = "Lindkvist",
                            UnionMember = false
                        },
                        new
                        {
                            Id = 4,
                            Name = "Erik",
                            Salary = 23000.0,
                            SectionId = 3,
                            Surname = "Nilsson",
                            UnionMember = false
                        },
                        new
                        {
                            Id = 5,
                            Name = "Karin",
                            Salary = 25000.0,
                            SectionId = 3,
                            Surname = "Berglund",
                            UnionMember = true
                        },
                        new
                        {
                            Id = 6,
                            Name = "Peter",
                            Salary = 24000.0,
                            SectionId = 3,
                            Surname = "Jonsson",
                            UnionMember = true
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.PersonnelPosition", b =>
                {
                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("PersonnelId", "PositionId");

                    b.HasIndex("PositionId");

                    b.ToTable("PersonnelPositions");

                    b.HasData(
                        new
                        {
                            PersonnelId = 1,
                            PositionId = 1
                        },
                        new
                        {
                            PersonnelId = 2,
                            PositionId = 2
                        },
                        new
                        {
                            PersonnelId = 3,
                            PositionId = 2
                        },
                        new
                        {
                            PersonnelId = 4,
                            PositionId = 4
                        },
                        new
                        {
                            PersonnelId = 5,
                            PositionId = 3
                        },
                        new
                        {
                            PersonnelId = 6,
                            PositionId = 5
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("PositionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PositionName = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            PositionName = "Junior Kvalitetsansvarig"
                        },
                        new
                        {
                            Id = 3,
                            PositionName = "Master Kock"
                        },
                        new
                        {
                            Id = 4,
                            PositionName = "Kock"
                        },
                        new
                        {
                            Id = 5,
                            PositionName = "Praktikant"
                        });
                });

            modelBuilder.Entity("Company.Data.Entities.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("SectionName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Sections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CompanyId = 1,
                            SectionName = "HR Sverige"
                        },
                        new
                        {
                            Id = 2,
                            CompanyId = 1,
                            SectionName = "Kvalitetskontroll Sverige"
                        },
                        new
                        {
                            Id = 3,
                            CompanyId = 1,
                            SectionName = "Kök Sverige"
                        });
                });

            modelBuilder.Entity("PersonnelPosition", b =>
                {
                    b.Property<int>("PersonnelId")
                        .HasColumnType("int");

                    b.Property<int>("PositionsId")
                        .HasColumnType("int");

                    b.HasKey("PersonnelId", "PositionsId");

                    b.HasIndex("PositionsId");

                    b.ToTable("PersonnelPosition");
                });

            modelBuilder.Entity("Company.Data.Entities.Personnel", b =>
                {
                    b.HasOne("Company.Data.Entities.Section", "Section")
                        .WithMany("Personnel")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Section");
                });

            modelBuilder.Entity("Company.Data.Entities.PersonnelPosition", b =>
                {
                    b.HasOne("Company.Data.Entities.Personnel", "Personnel")
                        .WithMany()
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personnel");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("Company.Data.Entities.Section", b =>
                {
                    b.HasOne("Company.Data.Entities.Business", "Company")
                        .WithMany("Sections")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PersonnelPosition", b =>
                {
                    b.HasOne("Company.Data.Entities.Personnel", null)
                        .WithMany()
                        .HasForeignKey("PersonnelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company.Data.Entities.Position", null)
                        .WithMany()
                        .HasForeignKey("PositionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Company.Data.Entities.Business", b =>
                {
                    b.Navigation("Sections");
                });

            modelBuilder.Entity("Company.Data.Entities.Section", b =>
                {
                    b.Navigation("Personnel");
                });
#pragma warning restore 612, 618
        }
    }
}
